version: '3.4'

volumes:
  sqldata:
    external: false

services:

  rabbitmq:
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:alpine
    ports:
      - "5379:6379"

  zipkin:
    ports:
      - "5411:9411"

  elasticsearch:
    ports:
      - 9200:9200
    environment:
    - http.host=0.0.0.0
    - transport.host=localhost
    - network.host=0.0.0.0
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - ELASTIC_PASSWORD=elastic
    - discovery.type=single-node
    - xpack.security.enabled=false

  kibana:
    ports:
      - 5601:5601

  sqldata:
    environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
    ports:
      - "5433:1433"
    volumes:
      - sqldata:/var/opt/mssql

  dapr-placement:
    command: ["./placement", "-port", "50000", "-log-level", "debug"]
    ports:
      - "50000:50000"

  web-httpaggregator-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "5000:8080"
      - "50001:50001"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro4

  web-httpaggregator-api-dapr:
    command: ["./daprd",
      "-app-id", "web-httpaggregator-api",
      "-app-port", "8080",
      "-components-path", "/components",
      "-config", "/configuration/config.yaml"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  basket-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "5001:8080"
      - "50002:50001"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  basket-api-dapr:
    command: ["./daprd",
      "-app-id", "basket-api",
      "-app-port", "8080",
      "-components-path", "/components",
      "-config", "/configuration/config.yaml"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  order-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    ports:
      - "5002:8080"
      - "50003:50001"

  order-api-dapr:
    command: ["./daprd",
      "-app-id", "order-api",
      "-app-port", "8080",
      "-log-level", "debug",
      "-placement-host-address", "dapr-placement:50000",
      "-components-path", "/components",
      "-config", "/configuration/config.yaml"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  payment-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "5003:8080"
      - "50004:50001"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  payment-api-dapr:
    command: ["./daprd",
      "-app-id", "payment-api",
      "-app-port", "8080",
      "-components-path", "/components",
      "-config", "/configuration/config.yaml"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  product-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "5004:8080"
      - "50005:50001"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  product-api-dapr:
    command: ["./daprd",
      "-app-id", "product-api",
      "-app-port", "8080",
      "-components-path", "/components",
      "-config", "/configuration/config.yaml"
      ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"